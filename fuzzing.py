#!/usr/bin/env python3
from turtle import color
import requests        # for sending/receiving web requests
import sys             # various system routines (exit, access to stdin, stderr, etc.)
import itertools       # simple tools for computing, e.g., the cross-product of lists
import random
from requests.auth import HTTPBasicAuth
import html
import string
class colors:
    CBLACK = '\33[30m'
    CRED = '\33[31m'
    CGREEN = '\33[32m'
    CYELLOW = '\33[33m'
    CBLUE = '\33[34m'
    CVIOLET = '\33[35m'
    CBEIGE = '\33[36m'
    CWHITE = '\33[37m'

root_url = "https://www.hackthissite.org/user/login"

headers = {  # default headers
    'User-Agent': '$',
    'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
    'Accept-Language': 'en-US,en;q=0.5',
    'Accept-Encoding': 'gzip,deflate',
    'Connection': 'close',
    'DNT': '1',
    'Upgrade-Insecure-Requests': '1',
}
user_agents = ['Mozilla/5.0 (X11; Linux i686; rv:60.0) Gecko/20100101 Firefox/60.0',
            'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.113 Safari/537.36',
            'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36 OPR/43.0.2442.991']

if 'User-Agent' not in headers:
    headers['User-Agent'] = random.choice(user_agents)
elif headers['User-Agent'] == '$':
    headers['User-Agent'] = random.choice(user_agents)


def send_request(dynamic_xss_mutations):

    for choice in dynamic_xss_mutations:
        print(colors.CBLUE,"Testing Dynamic XSS Payloads")
        try:
            data = {
                    'username': choice,
                    'password': choice,
                }
            header = headers
            res = requests.Session().post(root_url, headers=header, data= data)
            if choice in res.text:
                print(colors.CRED,"Parameter vulnerable\r\n")
            else:
                print(colors.CBLUE,"TRYING\t:", res.url)
        except:
            pass

                

def dynamic_xss_mutations_generator(seed_input):
    mutated_XSS_payloads = ''
    pos = random.randint(0, len(seed_input)+100)
    random_character = ''.join([random.choice(string.ascii_letters + string.digits + string.punctuation ) for n in range(12)])
    mutated_XSS_payloads = (seed_input[:pos+random.randrange(0, 2000)] + random_character + seed_input[pos:])
    pos = random.randint(0, len(mutated_XSS_payloads) - 1)
    return mutated_XSS_payloads[:pos] + mutated_XSS_payloads[pos + 1:]


def main():
    
    f = open('xsspayloads.txt', 'r', encoding="utf8")
    content = f.read()
    static_xss_payloads = content.split("\n")
    dynamic_xss_mutations = []
    for i in static_xss_payloads:
        for j in range(3):
            if dynamic_xss_mutations_generator(i) in dynamic_xss_mutations:
                pass
            else:
                print(dynamic_xss_mutations_generator(i))
                dynamic_xss_mutations.append(dynamic_xss_mutations_generator(i))
    send_request( dynamic_xss_mutations)

main()
    
